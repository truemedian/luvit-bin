name: Weekly Luvit Build

on:
  # workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout truemedian/luvit-bin
        uses: actions/checkout@v3

      - name: Clone
        working-directory: ci
        run: |
          chmod u+x build.sh
          chmod u+x headers.sh

          ./build.sh clone

      - name: Build Luvi
        working-directory: ci
        run: |
          ./build.sh luvi

      - name: Generate Headers
        working-directory: ci
        run: |
          ./headers.sh

      - name: Build Lit
        working-directory: ci
        run: |
          ./build.sh lit

      - name: Build Luvit
        working-directory: ci
        run: |
          ./build.sh luvit

      - name: Package
        working-directory: ci
        run: |
          ./build.sh package

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact }}
          path: ci/build/${{ env.artifact }}

      - uses: actions/upload-artifact@v3
        with:
          name: headers.tar.gz
          path: ci/headers/headers.tar.gz

  darwin:
    runs-on: macos-latest
    steps:
      - name: Checkout truemedian/luvit-bin
        uses: actions/checkout@v3

      - name: Clone
        working-directory: ci
        run: |
          chmod u+x build.sh

          ./build.sh clone

      - name: Build Luvi
        working-directory: ci
        run: |
          ./build.sh luvi

      - name: Build Lit
        working-directory: ci
        run: |
          ./build.sh lit

      - name: Build Luvit
        working-directory: ci
        run: |
          ./build.sh luvit

      - name: Package
        working-directory: ci
        run: |
          ./build.sh package

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact }}
          path: ci/build/${{ env.artifact }}

  windows:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        arch: [i386, x86_64]
    env:
      BUILD_ARCH: ${{ matrix.arch }}
    steps:
      - name: Checkout truemedian/luvit-bin
        uses: actions/checkout@v3

      - name: Cache Dependencies
        uses: actions/cache@v3
        id: cache
        with:
          path: C:\Program Files\NASM
          key: ${{ runner.os }}-nasm

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          choco install NASM

      - name: Setup PATH
        shell: pwsh
        run: |
          Write-Output "C:\Program Files\NASM" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Clone
        working-directory: ci
        run: |
          ./build.ps1 clone

      - name: Build Luvi
        working-directory: ci
        run: |
          ./build.ps1 luvi

      - name: Build Lit
        working-directory: ci
        run: |
          ./build.ps1 lit

      - name: Build Luvit
        working-directory: ci
        run: |
          ./build.ps1 luvit

      - name: Package
        working-directory: ci
        run: |
          ./build.ps1 package

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact }}
          path: ci/build/${{ env.artifact }}

  linux-arm:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [armv6, armv7, aarch64]
    steps:
      - name: Checkout truemedian/luvit-bin
        uses: actions/checkout@v3

      - name: Clone
        working-directory: ci
        run: |
          chmod u+x build.sh

          ./build.sh clone

      - uses: uraimo/run-on-arch-action@v2
        name: Build
        with:
          distro: stretch
          arch: ${{ matrix.arch }}

          shell: /bin/bash
          install: |
            apt-get update -q -y
            apt-get install -q -y build-essential perl git cmake
          run: |
            cd ci

            ./build.sh luvi
            ./build.sh lit
            ./build.sh luvit
            ./build.sh package_docker_inner

      - name: Package
        working-directory: ci
        run: |
          ./build.sh package_docker_outer

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact }}
          path: ci/build/${{ env.artifact }}

  release:
    needs: [linux, darwin, windows, linux-arm]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout truemedian/luvit-bin
        uses: actions/checkout@v3

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: build

      - name: Collect Artifacts
        run: |
          mkdir -p releases/
          cp build/**/* releases/

      - name: Generate Release Information
        working-directory: ci
        run: |
          chmod u+x release.sh

          ./release.sh

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body_path: ci/RELEASE
          files: releases/*
          name: Luvit ${{ env.tag }}
          tag_name: ${{ env.tag }}
